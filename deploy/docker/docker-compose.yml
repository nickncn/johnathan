version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: risk_dashboard
      POSTGRES_USER: risk_user
      POSTGRES_PASSWORD: risk_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U risk_user -d risk_dashboard" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://risk_user:risk_pass@db:5432/risk_dashboard
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=super-secret-jwt-key-change-in-production
      - LLM_PROVIDER=anthropic
      - LLM_API_KEY=${LLM_API_KEY}
      - CORS_ORIGINS=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  worker:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.api
    environment:
      - DATABASE_URL=postgresql://risk_user:risk_pass@db:5432/risk_dashboard
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=super-secret-jwt-key-change-in-production
      - LLM_PROVIDER=anthropic
      - LLM_API_KEY=${LLM_API_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../backend:/app
    command: celery -A app.workers.tasks worker --loglevel=info
    restart: unless-stopped

  beat:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.api
    environment:
      - DATABASE_URL=postgresql://risk_user:risk_pass@db:5432/risk_dashboard
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=super-secret-jwt-key-change-in-production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../backend:/app
    command: celery -A app.workers.tasks beat --loglevel=info
    restart: unless-stopped

  web:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.web
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
